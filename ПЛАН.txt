Добавьте класс для работы с запросами.
fetch, axios и подобное использовать нельзя, только promise и xhr;
реализуйте методы get, post, put, delete;
добавьте работу с “query string” в get-запросе и “body” для других методов.

Напишите тесты для шаблонизатора, роутера, компоненты, модуля отправки запросов.
Понадобятся позитивные кейсы, негативные, фаззинг тестирование и проверка граничных значения.


const obj = {
  key: 1,
  key2: 'test',
  key3: false,
  key5: true,
  key5: [1, 2, 3],
  key6: {a: 1},
  key7: {b: {d: 2}},
};

      function queryStringify(data) {
        function arrayToString(arr, key) {
          return arr.reduce((acc, v, i) => `${acc}${i ? '&' : ''}${key}[${i}]=${v}`, '');
        }

        function getKeysObjectToArray(obj, arr = []) {
          Object.entries(obj).forEach(([k, v], i) => {
            if (typeof v === 'object') arr.concat(getKeysObjectToArray(v, arr).arrKeys);
            else value = v;
            arr.push(k);
          });
          return { arrKeys: arr, value };
        }

        function objectToString({ arrKeys, value }, key) {
          const path = arrKeys.reverse().reduce((acc, v) => `${acc}[${v}]`, '');
          return `${key}${path}=${value}`;
        }

        if (typeof data === 'object') {
          const keys = Object.keys(data);
          if (data && keys.length !== 0) {
            let searchParams = '';
            keys.forEach((key, i) => {
              let params = '';
              if (Array.isArray(data[key])) {
                params += arrayToString(data[key], key);
              } else if (typeof data[key] === 'object') {
                params += objectToString(getKeysObjectToArray(data[key]), key);
              } else {
                params += `${key}=${data[key].toString()}`;
              }
              searchParams += `${i ? '&' : ''}${params}`;
            });
            return `${searchParams.toString()}`;
          }
        } else {
          throw new Error('no obj');
        }
        return searchParams;
      }

queryStringify(obj); // 'key=1&key2=test&key3=false&key5[0]=1&key5[1]=2&key5[2]=3&key6[a]=1&key7[b][d]=2'